# yaml-language-server: $schema=https://raw.githubusercontent.com/json-schema-org/json-schema-spec/draft-07/schema.json
name: Integrate helmfile releases
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'
env:
  CACHE_REGISTRY: ghcr.io
  CACHE_REPO: redkubes/otomi-core
  REPO: otomi/core
  GIT_USER: redkubesbot
  GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_OTOMI_TOKEN }}
  KIND_TAG: v1.19.0

jobs:
  kind:
    runs-on: ubuntu-latest
    container:
      image: otomi/tools:kind
      options: --user=root:root
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ env.GIT_PASSWORD }}
      # Important info: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#docker-container-filesystem
      - name: K8s in Docker
        run: |
          export PATH=$PATH:/home/app/tools
          export KUBECONFIG=$HOME/.kube/config

          whoami

          mkdir -p $HOME/.kube
          touch $KUBECONFIG
          chown -R root:root $HOME
          chmod 777 $KUBECONFIG
          ls -lah $KUBECONFIG

          kind create cluster --wait 5m \
            --name kind \
            --kubeconfig $KUBECONFIG \
            --image kindest/node:${{ env.KIND_TAG }} \
            --config=./kind-config.yaml

          echo "DEBUG INFO INCOMING........"
          # cat ${HOME}/.kube/config
          docker ps -a
          # docker inspect kind-control-plane -f "{{json .NetworkSettings.Networks }}"
          kubectl cluster-info --context kind-kind --kubeconfig /github/home/.kube/config
          echo "----------------------------"

          mkdir -p ./env/env
          cp -r ./tests/fixtures/env/ ./env/
          ls -lah ./env/env

          npm ci && \
            npm run compile && \
            /usr/bin/node --experimental-specifier-resolution=node ./dist/otomi.js -- apply

          kind delete cluster --name kind
